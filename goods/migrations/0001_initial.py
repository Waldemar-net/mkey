# Generated by Django 4.2.16 on 2024-10-21 10:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('publisher', '0001_initial'),
        ('developer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Наличие',
                'verbose_name_plural': 'Наличие',
                'db_table': 'availability',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
                ('is_displayed', models.BooleanField(default=False, verbose_name='Отображать')),
            ],
            options={
                'verbose_name': 'Категорию',
                'verbose_name_plural': 'Категории',
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Direx',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Directx',
                'verbose_name_plural': 'Directx',
                'db_table': 'direx',
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Место на диске',
                'verbose_name_plural': 'Место на диске',
                'db_table': 'disk',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Языковую поддержку',
                'verbose_name_plural': 'Языковая поддержка',
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='OCSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Операционная система',
                'verbose_name_plural': 'Операционные системы',
                'db_table': 'system',
            },
        ),
        migrations.CreateModel(
            name='Platforms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Платформу',
                'verbose_name_plural': 'Платформы',
                'db_table': 'platforms',
            },
        ),
        migrations.CreateModel(
            name='ProcessorPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Процессор',
                'verbose_name_plural': 'Процессоры',
                'db_table': 'processor',
            },
        ),
        migrations.CreateModel(
            name='RAMPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Оперативная память',
                'verbose_name_plural': 'Оперативная память',
                'db_table': 'ram',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы активации',
                'db_table': 'region',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы активации',
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='VideoCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Видеокарты',
                'verbose_name_plural': 'Видеокарта',
                'db_table': 'videocard',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='goods_images', verbose_name='Изображение')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='goods_images', verbose_name='Постер')),
                ('is_displayed', models.BooleanField(default=False, verbose_name='Отображать на главном экране')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='Цена')),
                ('discount', models.DecimalField(decimal_places=0, default=0.0, max_digits=7, verbose_name='Скидка в %')),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=7, verbose_name='Рейтинг')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Колличество')),
                ('datas', models.DateField(blank=True, null=True, verbose_name='Даты выхода')),
                ('additional', models.CharField(blank=True, max_length=250, null=True, verbose_name='Дополнительная информация')),
                ('video', models.CharField(blank=True, max_length=200, null=True, verbose_name='Трейлер')),
                ('availabilitys', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.availability', verbose_name='Наличие игры')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='goods.categories', verbose_name='Категория')),
                ('developer', models.ManyToManyField(to='developer.developers', verbose_name='Разработчик')),
                ('direx', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.direx', verbose_name='Directx')),
                ('disk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.disk', verbose_name='Необходимое место на диске')),
                ('genry', models.ManyToManyField(to='goods.genre', verbose_name='Жанр')),
                ('languages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.languages', verbose_name='Языковая поддержка')),
                ('platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.platforms', verbose_name='Платформа')),
                ('processor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.processorpc', verbose_name='Процессор')),
                ('publisher', models.ManyToManyField(to='publisher.publishers', verbose_name='Издатель')),
                ('rampc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.rampc', verbose_name='Оперативная память')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.region', verbose_name='Регион активации')),
                ('services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.services', verbose_name='Сервис активации')),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.ocsystem', verbose_name='Операционная система')),
                ('videocard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='goods.videocard', verbose_name='Видеокарта')),
            ],
            options={
                'verbose_name': 'Игру',
                'verbose_name_plural': 'Игры',
                'db_table': 'product',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='goods_images', verbose_name='Изображения')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='goods.products', verbose_name='Скриншоты')),
            ],
            options={
                'verbose_name': 'Скриншот',
                'verbose_name_plural': 'Скриншоты',
            },
        ),
    ]
